HEADER_GUARD: CPPFORGE_CORE_FORGE_FORGE_CACHE_HPP
HEADER_FILENAME: forge_cache.hpp
DESCRIPTION: Base CRTP-style ForgeCache interface for stateful, key-value ForgeablePtr management.
INCLUDES:
  - "<string>"
  - "\"forgeable.hpp\""
  - "\"stateful_forgeable.hpp\""
  - "\"cppforge_ptr.hpp\""
NAMESPACE: cppforge::core::forge

CLASS_NAME: ForgeCache

TEMPLATE_PARAM: Derived

ALIASES:
  - NAME: KeyType
    TYPE: std::string
    hasNext: true
  - NAME: ValueType
    TYPE: ForgeablePtr<typename Derived::StoredType>
    hasNext: false

has_alias: true

METHODS:
  - NAME: insert
    RETURN_TYPE: void
    PARAMS:
      - DESCRIPTION: "const KeyType& key"
        hasNext: true
      - DESCRIPTION: "ValueType value"
        hasNext: false
    SPECIFIER: noexcept
    hasNext: true

  - NAME: get
    RETURN_TYPE: ValueType*
    PARAMS:
      - DESCRIPTION: "const KeyType& key"
        hasNext: false
    SPECIFIER: noexcept
    hasNext: true

  - NAME: remove
    RETURN_TYPE: void
    PARAMS:
      - DESCRIPTION: "const KeyType& key"
        hasNext: false
    SPECIFIER: noexcept
    hasNext: true

  - NAME: clear
    RETURN_TYPE: void
    PARAMS: []
    SPECIFIER: noexcept
    hasNext: true

  - NAME: size
    RETURN_TYPE: std::size_t
    PARAMS: []
    SPECIFIER: const noexcept
    hasNext: false

has_method: true
has_second_template_param: false