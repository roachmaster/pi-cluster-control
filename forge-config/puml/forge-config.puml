@startuml
package "Forge Config Module" {
    ' The Facade that clients use to load and access configuration data.
    class ForgeConfig {
        +loadConfigs()
        +getModulesConfig() : ModulesConfig
        +getBacklogConfig() : BacklogConfig
        +getGoalsConfig() : GoalsConfig
        +getWorkflowConfig() : WorkflowConfig
    }

    ' Reads file content from disk.
    class ConfigLoader {
        +readFile(filePath : String) : String
    }

    ' Parses YAML content into an internal representation (e.g., a map or JSON-like structure).
    class YAMLParser {
        +parse(yamlContent : String) : Map
    }

    ' Validates the parsed YAML data against a schema and applies any default values.
    class SchemaValidator {
        +validate(data : Map, schema: Schema) : Boolean
        +applyDefaults(data : Map, defaults: Map) : Map
    }

    ' Data Transfer Object representing modules.yaml
    class ModulesConfig <<DTO>> {
    }

    ' Data Transfer Object representing backlog.yaml
    class BacklogConfig <<DTO>> {
    }

    ' Data Transfer Object representing goals.yaml
    class GoalsConfig <<DTO>> {
    }

    ' Data Transfer Object representing workflow.yaml
    class WorkflowConfig <<DTO>> {
    }

    ' Relationships:
    ForgeConfig --> ConfigLoader : uses
    ForgeConfig --> YAMLParser : uses
    ForgeConfig --> SchemaValidator : uses
    ForgeConfig --> ModulesConfig : creates/returns
    ForgeConfig --> BacklogConfig : creates/returns
    ForgeConfig --> GoalsConfig : creates/returns
    ForgeConfig --> WorkflowConfig : creates/returns
}
@enduml