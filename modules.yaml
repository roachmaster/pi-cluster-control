CMAKE:
  VERSION: 3.21
  PROJECT: pi_cluster_control
  CXX_STANDARD: 17

GLOBAL_PACKAGES:

GLOBAL_TEST_PACKAGES:
  - NAME: googletest
    URL: https://github.com/google/googletest/archive/refs/tags/release-1.12.1.zip

MODULES:
  # Core & Configuration
  - NAME: forge-core
    TYPE: lib
    TEST: false
    PACKAGES: []
    DEPENDS_ON: []
    RESPONSIBILITY: >
      Provides shared interfaces, type definitions, enums, and data transfer objects (DTOs)
      used across all Forge modules. This module defines core abstractions and contracts
      but contains no business logic or implementations.

  - NAME: forge-core-tests
    TYPE: lib
    TEST: true
    PACKAGES:
      - NAME: googletest
        URL: https://github.com/google/googletest/archive/refs/tags/release-1.12.1.zip
        INCLUDE: "googletest/include"
    DEPENDS_ON:
      - forge-core
    TEST_DEPENDS_ON: []
    RESPONSIBILITY: >
      Contains the comprehensive testing infrastructure for the Forge modules,
      including scenario implementations, test runners, integration tests, and supportive
      test utilities. This module leverages GoogleTest and other tools to validate the correctness
      and functionality of all Forge components in the system.

#  - NAME: forge-config
#    TYPE: lib
#    TEST: true
#    PACKAGES: []
#    DEPENDS_ON:
#      - forge-core
#    TEST_DEPENDS_ON:
#      - forge-core
#      - forge-core-tests
#    RESPONSIBILITY: >
#      Handles loading, parsing, validation, and lifecycle management of all YAML-based
#      configuration files in the system, including modules.yaml, backlog.yaml, goals.yaml,
#      and workflow.yaml. Responsible for providing schema validation, defaults, and
#      structured access to config data across the Forge system.
#  - NAME: forge-templates
#    TYPE: lib
#    TEST: true
#    PACKAGES: []
#    RESPONSIBILITY: >
#      Responsible for managing code generation templates, their discovery, reuse, and injection
#      into scaffolding and regeneration processes. Supports dynamic templating for C++, CMake, and other artifacts.
#
#  # Execution & Codegen
#  - NAME: forge-scaffold
#    TYPE: lib
#    TEST: true
#    PACKAGES: []
#    RESPONSIBILITY: >
#      Drives the generation of new modules based on config specs and templates.
#      Creates CMake files, source trees, and test structures safely, supporting updates and regeneration.
#
#  - NAME: forge-bootstrapper
#    TYPE: lib
#    TEST: true
#    PACKAGES: []
#    RESPONSIBILITY: >
#      Responsible for creating the initial structure of a project including top-level CMakeLists.txt
#      and bootstrapping module integration. Ensures first-time setup reflects the modules.yaml state.
#
#  - NAME: forge-parser
#    TYPE: lib
#    TEST: true
#    PACKAGES: []
#    RESPONSIBILITY: >
#      Parses C++ header and source files into structured metadata including class names, methods,
#      annotations, and namespaces. Supports DI extraction, autowiring, and introspection for generation.
#
#  - NAME: forge-di
#    TYPE: lib
#    TEST: true
#    PACKAGES: []
#    RESPONSIBILITY: >
#      Builds the dependency injection (DI) system. Handles metadata extraction, container code generation,
#      lifecycle management (singleton, scoped), and supports test/mocking integration.
#
#  # Orchestration & Persistence
#  - NAME: forge-orchestrator
#    TYPE: lib
#    TEST: true
#    PACKAGES: []
#    RESPONSIBILITY: >
#      Coordinates system-wide execution. Dispatches workflows, manages module-level triggers, and ensures
#      tools run in proper order using DAG and config dependencies.
#
#  - NAME: forge-dag
#    TYPE: lib
#    TEST: true
#    PACKAGES: []
#    RESPONSIBILITY: >
#      Constructs and maintains a directed acyclic graph (DAG) of module dependencies.
#      Enables topological analysis, cycle detection, and parallelization strategies.
#
#  - NAME: forge-persistence
#    TYPE: lib
#    TEST: true
#    PACKAGES: []
#    RESPONSIBILITY: >
#      Provides SQL-based and file-based persistence for backlog items, config snapshots,
#      and tooling state. Supports bidirectional syncing between YAML and database.
#
#  - NAME: forge-backlog
#    TYPE: lib
#    TEST: true
#    PACKAGES: []
#    RESPONSIBILITY: >
#      Manages feature-level development tracking through backlog.yaml.
#      Supports linking to goals, workflows, and modules; offers validation and test integration.
#
#  - NAME: forge-plugin
#    TYPE: lib
#    TEST: true
#    PACKAGES: []
#    RESPONSIBILITY: >
#      Provides infrastructure for plugin discovery, loading, and execution during Forge CLI operations.
#      Allows custom extensions to participate in lifecycle phases like analyze, generate, validate.
#
#  - NAME: forge-daemon
#    TYPE: lib
#    TEST: true
#    PACKAGES: []
#    RESPONSIBILITY: >
#      Implements background services and long-running tasks such as file watching, test monitoring,
#      and async triggers. Supports inter-process communication (IPC) with the CLI and UI.
#
#  - NAME: forge-ui
#    TYPE: lib
#    TEST: true
#    PACKAGES: []
#    RESPONSIBILITY: >
#      Provides frontend components or CLI-based interfaces for rendering project state, backlog, and goals.
#      May support TUI or web integration in the future.
#
#  - NAME: forge-cli
#    TYPE: lib
#    TEST: true
#    PACKAGES: []
#    RESPONSIBILITY: >
#      Owns the CLI entrypoint and routing. Registers subcommands, handles arguments, and invokes
#      appropriate orchestration logic or tools. Exposes the public face of the Forge system.
#
#  # Other non-forge modules
#  - NAME: agent
#    TYPE: exe
#    TEST: true
#    PACKAGES:
#      - boost
#
#  - NAME: master
#    TYPE: exe
#    TEST: false
#    PACKAGES:
#      - jsoncpp
#
#  - NAME: backend
#    TYPE: exe
#    TEST: true
#    PACKAGES:
#      - crow
#      - nlohmann-json