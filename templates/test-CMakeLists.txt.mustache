cmake_minimum_required(VERSION {{CMAKE_VERSION}})
project({{CMAKE_PROJECT}})

set(CMAKE_CXX_STANDARD {{CXX_STANDARD}})
set(CMAKE_CXX_STANDARD_REQUIRED ON)

include(FetchContent)

enable_testing()

# === Global Test Dependencies ===
{{#GLOBAL_TEST_PACKAGES}}
FetchContent_Declare(
    {{NAME}}
    URL {{{URL}}}
)
FetchContent_MakeAvailable({{NAME}})
{{/GLOBAL_TEST_PACKAGES}}

# === Collect All Test Sources ===
file(GLOB_RECURSE TEST_SOURCES
    ${CMAKE_CURRENT_SOURCE_DIR}/test_scenario_*.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/../test_scenario_*.cpp
{{#TEST_DEPENDS_ON}}
    ${CMAKE_SOURCE_DIR}/{{.}}/src/test_scenario_*.cpp
{{/TEST_DEPENDS_ON}}
)
message(STATUS "Test sources: ${TEST_SOURCES}")

# === Test Executable ===
add_executable(test_{{MODULE_NAME}} ${TEST_SOURCES})

target_link_libraries(test_{{MODULE_NAME}} PRIVATE
    {{MODULE_NAME}}_lib
{{#TEST_DEPENDS_LIB}}
    {{.}}
{{/TEST_DEPENDS_LIB}}
    gtest
    gtest_main
)

# Add the test module's own include directories along with any dependent modules.
target_include_directories(test_{{MODULE_NAME}} PRIVATE
    ${CMAKE_CURRENT_SOURCE_DIR}/include
    ${CMAKE_CURRENT_SOURCE_DIR}/../include
    {{#TEST_DEPENDS_ON}}
        ${CMAKE_SOURCE_DIR}/{{.}}/include
    {{/TEST_DEPENDS_ON}}
)

include(GoogleTest)
gtest_discover_tests(test_{{MODULE_NAME}})

set_target_properties(test_{{MODULE_NAME}} PROPERTIES
    RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin
)