#include <gtest/gtest.h>
#include <iostream>
#include <memory>

// Step Interface
class {{interface_class_name}} {
public:
{{#steps}}
    virtual void {{method_name}}() {
        FAIL() << "[STEP NOT IMPLEMENTED] {{{escaped_step_text}}}";
    }
{{/steps}}

    virtual ~{{interface_class_name}}() = default;
};

// Stub Implementation (throws failures)
class {{stub_class_name}} : public {{interface_class_name}} {
    // No overrides â€“ just uses FAIL() behavior from base class
};

#ifdef HAS_IMPL_{{interface_class_name}}
static std::unique_ptr<{{interface_class_name}}> forge_bdd_steps() {
    return std::make_unique<impl_{{interface_class_name}}>();
}
#else
static std::unique_ptr<{{interface_class_name}}> forge_bdd_steps() {
    return std::make_unique<{{stub_class_name}}>();
}
#endif

// Test Case
TEST({{test_class_name}}, executes_scenario) {
    auto steps = forge_bdd_steps();

{{#steps}}
    std::cout << "[{{prefix}}] {{{escaped_step_text}}}" << std::endl;
    steps->{{method_name}}();
{{/steps}}
}
